import React from 'react';
import { Head } from '@inertiajs/react';
import ChildLayout from '@/Layouts/ChildLayout';
import { Child, Stamp } from '@/types';

interface Props {
    child: Child;
    todayStamps: Stamp[];
}

export default function TodayStamps({ child, todayStamps }: Props) {
    const getCurrentTime = () => {
        return new Intl.DateTimeFormat('ja-JP', {
            hour: '2-digit',
            minute: '2-digit'
        }).format(new Date());
    };

    const getTimeOfDay = () => {
        const hour = new Date().getHours();
        if (hour < 12) return { emoji: 'üåÖ', text: '„Åä„ÅØ„Çà„ÅÜ' };
        if (hour < 18) return { emoji: '‚òÄÔ∏è', text: '„ÅäÁñ≤„Çå„Åï„Åæ' };
        return { emoji: 'üåô', text: '„ÅäÁñ≤„Çå„Åï„Åæ' };
    };

    const formatStampTime = (dateString: string) => {
        const date = new Date(dateString);
        return new Intl.DateTimeFormat('ja-JP', {
            hour: '2-digit',
            minute: '2-digit'
        }).format(date);
    };

    const timeOfDay = getTimeOfDay();

    return (
        <ChildLayout title={`${child.name}„ÅÆ‰ªäÊó•„ÅÆ„Çπ„Çø„É≥„Éó`} childName={child.name}>
            <div className="px-4 py-6 space-y-6">
                {/* ‰ªäÊó•„ÅÆÊÉÖÂ†± */}
                <div className="bg-white/80 backdrop-blur-sm rounded-2xl p-6 text-center shadow-lg">
                    <div className="text-4xl mb-3">{timeOfDay.emoji}</div>
                    <h2 className="text-xl font-bold text-gray-800 mb-2">
                        {timeOfDay.text}„ÄÅ{child.name}ÔºÅ
                    </h2>
                    <p className="text-gray-600">
                        ‰ªä„ÅØ {getCurrentTime()} „Å†„Çà
                    </p>
                    <div className="mt-4 text-3xl font-bold text-blue-600">
                        ‰ªäÊó•„ÅÆ„Çπ„Çø„É≥„Éó: {todayStamps.length}ÂÄã
                    </div>
                </div>

                {/* ‰ªäÊó•„ÅÆ„Çπ„Çø„É≥„Éó‰∏ÄË¶ß */}
                <div className="space-y-4">
                    <h3 className="text-lg font-bold text-gray-800 text-center">
                        üéØ ‰ªäÊó•„ÇÇ„Çâ„Å£„Åü„Çπ„Çø„É≥„Éó
                    </h3>
                    
                    {todayStamps.length > 0 ? (
                        <div className="space-y-3">
                            {todayStamps.map((stamp, index) => (
                                <div 
                                    key={stamp.id}
                                    className="bg-white/80 backdrop-blur-sm rounded-2xl p-4 shadow-lg transform hover:scale-105 transition-transform"
                                    style={{
                                        animationDelay: `${index * 0.1}s`,
                                        animation: 'fadeInUp 0.5s ease-out forwards'
                                    }}
                                >
                                    <div className="flex items-center space-x-4">
                                        {/* „Çπ„Çø„É≥„ÉóÁï™Âè∑„Å®„Ç¢„Ç§„Ç≥„É≥ */}
                                        <div className="relative">
                                            <div className="w-16 h-16 bg-gradient-to-br from-yellow-400 to-orange-500 rounded-full flex items-center justify-center text-2xl shadow-lg">
                                                ‚≠ê
                                            </div>
                                            <div className="absolute -top-1 -right-1 w-6 h-6 bg-blue-500 text-white rounded-full flex items-center justify-center text-xs font-bold">
                                                {index + 1}
                                            </div>
                                        </div>
                                        
                                        <div className="flex-1">
                                            <div className="flex items-center justify-between mb-1">
                                                <h4 className="font-bold text-gray-800">
                                                    {stamp.stamp_type?.name || '„Çπ„Çø„É≥„Éó'}
                                                </h4>
                                                <span className="text-sm font-bold text-blue-600">
                                                    {formatStampTime(stamp.stamped_at)}
                                                </span>
                                            </div>
                                            
                                            {stamp.comment && (
                                                <div className="bg-gradient-to-r from-yellow-50 to-orange-50 rounded-lg p-3 mt-2">
                                                    <p className="text-sm text-gray-700">
                                                        üí≠ {stamp.comment}
                                                    </p>
                                                </div>
                                            )}
                                        </div>
                                    </div>
                                </div>
                            ))}
                        </div>
                    ) : (
                        <div className="text-center py-12">
                            <div className="text-6xl mb-4">üéà</div>
                            <h3 className="text-lg font-bold text-gray-800 mb-2">
                                ‰ªäÊó•„ÅØ„Åæ„Å†„Çπ„Çø„É≥„Éó„Åå„Å™„ÅÑ„Çà
                            </h3>
                            <p className="text-gray-600">
                                ‰Ωï„ÅãÈ†ëÂºµ„Å£„Åü„Åì„Å®„Åå„ÅÇ„Å£„Åü„Çâ<br />
                                „Çπ„Çø„É≥„Éó„Çí„ÇÇ„Çâ„Åà„Çã„Åã„ÇÇÔºÅ
                            </p>
                        </div>
                    )}
                </div>

                {/* Âä±„Åæ„Åó„É°„ÉÉ„Çª„Éº„Ç∏ */}
                <div className="bg-gradient-to-r from-green-400/20 to-blue-400/20 backdrop-blur-sm rounded-2xl p-6 text-center">
                    <div className="text-3xl mb-3">
                        {todayStamps.length >= 3 ? 'üèÜ' : todayStamps.length >= 1 ? 'üåü' : 'üí™'}
                    </div>
                    <p className="text-gray-700 font-medium">
                        {todayStamps.length >= 3 
                            ? '„Åô„Åî„ÅÑÔºÅ‰ªäÊó•„ÅØ„Åü„Åè„Åï„ÇìÈ†ëÂºµ„Å£„Åü„Å≠ÔºÅ'
                            : todayStamps.length >= 1
                                ? '„ÅÑ„ÅÑË™øÂ≠êÔºÅ„ÇÇ„Å£„Å®È†ëÂºµ„Çç„ÅÜÔºÅ'
                                : '‰ªäÊó•„ÇÇ‰∏ÄÊó•„ÅäÁñ≤„Çå„Åï„ÅæÔºÅÊòéÊó•„ÇÇÈ†ëÂºµ„Çç„ÅÜ„Å≠ÔºÅ'}
                    </p>
                </div>

                {/* ÊôÇÈñìÂà•„ÅÆ„Ç¢„Éâ„Éê„Ç§„Çπ */}
                <div className="bg-white/60 backdrop-blur-sm rounded-2xl p-4 text-center">
                    <div className="text-2xl mb-2">üí°</div>
                    <p className="text-sm text-gray-600">
                        {(() => {
                            const hour = new Date().getHours();
                            if (hour < 9) return '‰ªäÊó•„ÇÇ‰∏ÄÊó•È†ëÂºµ„Çç„ÅÜ„Å≠ÔºÅ';
                            if (hour < 12) return '„ÅäÊâã‰ºù„ÅÑ„ÇÑÂãâÂº∑„ÇíÈ†ëÂºµ„Å£„Å¶„Åø„Çà„ÅÜÔºÅ';
                            if (hour < 15) return '„ÅäÊòº„ÅÆÂæå„ÇÇÂÖÉÊ∞ó„Å´ÈÅé„Åî„Åù„ÅÜÔºÅ';
                            if (hour < 18) return '‰ªäÊó•‰∏ÄÊó•„ÅäÁñ≤„Çå„Åï„ÅæÔºÅ';
                            return '‰ªäÊó•„ÇÇ‰∏ÄÊó•È†ëÂºµ„Å£„Åü„Å≠ÔºÅ„ÇÜ„Å£„Åè„Çä‰ºë„ÇÇ„ÅÜ';
                        })()}
                    </p>
                </div>
            </div>

            <style jsx global>{`
                @keyframes fadeInUp {
                    from {
                        opacity: 0;
                        transform: translateY(20px);
                    }
                    to {
                        opacity: 1;
                        transform: translateY(0);
                    }
                }
            `}</style>
        </ChildLayout>
    );
}